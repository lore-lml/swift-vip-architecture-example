//
//  StudentsSceneSceneRouter.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 23/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import UIKit
import SwiftRouting
import Swinject

typealias IStudentsSceneController = IStudentsSceneDelegate & UIViewController

// MARK: Navigation Methods
protocol IStudentsSceneRouter: AnyObject{
    func showCharacterDetail(_ input: StudentsSceneModels.CharacterDetailInput)
}

enum StudentsSceneRoutes {
    case characterDetail(input: CharacterDetailSceneModels.Input)
}

class StudentsSceneRouter: IRouter {
    
    typealias Routes = StudentsSceneRoutes
    
    weak var view: IStudentsSceneController!
    var navigator: IAppNavigator?
    var assembler: Assembler?
    
    init(view: IStudentsSceneController) {
        self.view = view
    }
    
    func showRoute(route: StudentsSceneRoutes) {
        
        switch route{
        case .characterDetail(let input):
            let controller = CharacterDetailSceneAdapter.setup(input: input, assembler: assembler)
            navigator?.go(from: view, to: controller)
        }
    }
}


extension StudentsSceneRouter: IStudentsSceneRouter{
    // MARK: NAVIGATION METHODS LOGIC INTERFACE IMPLEMENTATION
    
    func showCharacterDetail(_ input: StudentsSceneModels.CharacterDetailInput){
        showRoute(route: .characterDetail(input: .init(character: input.detail, characterImg: input.characterImg)))
    }
    
    
}
