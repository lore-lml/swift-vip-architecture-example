//
//  StudentsSceneSceneViewController.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 23/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import UIKit

// MARK: Controller Delegate
protocol IStudentsSceneDelegate: AnyObject{
    func didReceiveFetchStudentsViewModel(_ vms: [StudentsSceneModels.FetchStudents.ViewModel])
    func didReceiveError(_ errorVm: StudentsSceneModels.ShowError.ViewModel)
}

class StudentsSceneViewController: UIViewController {
    
    var router: IStudentsSceneRouter!
    var interactor: IStudentsSceneInteractor!
    
    // MARK: OUTLETS
    @IBOutlet weak var tableView: UITableView!
    
    private var _loadingView: LoadingView?
    private var _students: [StudentsSceneModels.FetchStudents.ViewModel] = []{
        didSet{
            tableView.reloadData()
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        _loadingView = .loadView(into: self, autoPlay: false)
        _configureTableView()
        _fetchStudents()
    }
    
    
    private func _configureTableView(){
        tableView.delegate = self
        tableView.dataSource = self
        CharacterTableViewCell.subscribe(to: tableView)
    }
}

extension StudentsSceneViewController: UITableViewDelegate, UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        _students.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: CharacterTableViewCell.cellId, for: indexPath) as! CharacterTableViewCell
        
        cell.configure(character: _students[indexPath.row])
        
        return cell
    }
    
}

extension StudentsSceneViewController: IStudentsSceneDelegate{
    // MARK: DISPLAY LOGIC IMPLEMENTATION INTERFACE
    
    private func _fetchStudents(){
        _loadingView?.play()
        interactor.fetchStudentsRequest()
    }
    
    func didReceiveFetchStudentsViewModel(_ vms: [StudentsSceneModels.FetchStudents.ViewModel]){
        self._students = vms
        _loadingView?.stop()
    }
    
    func didReceiveError(_ errorVm: StudentsSceneModels.ShowError.ViewModel){
        Log.e(errorVm.description)
    }
}
