//
//  StudentsSceneInteractor.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 23/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import Foundation

// MARK: Interactor Requests interface
protocol IStudentsSceneInteractor: AnyObject{
    func fetchStudentsRequest()
    func fetchStudentImageRequest(_ request: StudentsSceneModels.FetchStudentImage.Request)
    func showCharacterDetailRequest(_ request: StudentsSceneModels.ShowCharacterDetail.Request)
}

class StudentsSceneInteractor {
    
    var presenter: IStudentsScenePresenter
    private let _studentWorker: HpStudentsWorker
    private let _studentImagesWorker: HpStudentImagesWorker
    
    init(presenter: IStudentsScenePresenter, hpService: HPService){
        self.presenter = presenter
        self._studentWorker = .init(hpService: hpService)
        self._studentImagesWorker = .init(hpService: hpService)
    }

}

extension StudentsSceneInteractor: IStudentsSceneInteractor{
    // MARK: BUSINESS LOGIC INTERFACE IMPLEMENTATIONS
    func fetchStudentsRequest(){
        _studentWorker.getStudents { [weak self] res in
            switch res{
            case .success(let students):
                self?.presenter.fetchStudentsResponse(students)
            case .failure(let err):
                self?.presenter.showErrorResponse(.init(error: err))
            }
        }
    }
    
    func fetchStudentImageRequest(_ request: StudentsSceneModels.FetchStudentImage.Request){
        let selectedCharacter = request.dtoCharacter
        _studentImagesWorker.getStudentImage(character: selectedCharacter) { [weak self] res in
            
            let img: Data?
            
            switch res{
            case .success(let imgData):
                img = imgData
                
            case .failure:
                img = nil
            }
            
            let response = StudentsSceneModels.FetchStudentImage.Response(
                cellIndex: request.cellIndex,
                studentImg: img
            )
            
            self?.presenter.fetchStudentImageResponse(response)
            
        }
    }
    
    func showCharacterDetailRequest(_ request: StudentsSceneModels.ShowCharacterDetail.Request){
        let selectedCharacter = request.dtoCharacter
        let detail = _studentWorker.getStudentDetail(character: selectedCharacter)
        _studentImagesWorker.getStudentImage(character: selectedCharacter) { [weak self] res in
            let data = try? res.get()
            self?.presenter.showCharacterDetailResponse(
                .init(studentImg: data, detail: detail)
            )
        }
        
        
    }
}
