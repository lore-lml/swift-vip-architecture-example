//
//  StudentsSceneScenePresenter.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 23/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import UIKit

protocol IStudentsScenePresenter: AnyObject {
    func fetchStudentsResponse(_ response: StudentsSceneModels.FetchStudents.Response)
    func fetchStudentImageResponse(_ response: StudentsSceneModels.FetchStudentImage.Response)
    func showCharacterDetailResponse(_ response: StudentsSceneModels.ShowCharacterDetail.Response)
    func showErrorResponse(_ response: StudentsSceneModels.ShowError.Response)
    
}

class StudentsScenePresenter{
    
    weak var view: IStudentsSceneDelegate?
    
    init(view: IStudentsSceneDelegate){
        self.view = view
    }
}

extension StudentsScenePresenter: IStudentsScenePresenter{
    // MARK: PRESENTATION LOGIC INTERFACE IMPLEMENTATIONS
    func fetchStudentsResponse(_ response: StudentsSceneModels.FetchStudents.Response){
        let vms = response.map{ StudentsSceneModels.FetchStudents.ViewModel(name: $0.name, house: $0.house.rawValue, isLoading: true)}
        self.view?.didReceiveFetchStudentsViewModel(vms)
    }
    
    func fetchStudentImageResponse(_ response: StudentsSceneModels.FetchStudentImage.Response){
        
        let img = response.studentImg == nil ? UIImage(named: "placeholder") : UIImage(data: response.studentImg!)
        
        let vm = StudentsSceneModels.FetchStudentImage.ViewModel(cellIndex: response.cellIndex, studentImg: img)
        
        view?.didReceiveFetchStudentImageViewModel(vm)
    }
    
    func showCharacterDetailResponse(_ response: StudentsSceneModels.ShowCharacterDetail.Response){
        let img = response.studentImg == nil ? UIImage(named: "placeholder") : UIImage(data: response.studentImg!)
        
        view?.showCharacterDetail(.init(detail: response.detail, characterImg: img))
    }
    
    func showErrorResponse(_ response: StudentsSceneModels.ShowError.Response){
        self.view?.didReceiveError(.init(description: response.error.localizedDescription))
    }
}
