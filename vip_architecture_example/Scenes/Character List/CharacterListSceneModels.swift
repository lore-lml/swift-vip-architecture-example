//
//  CharacterList.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 29/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

enum CharacterList {
    
    enum ListType{
        case house(HpHouse)
        case students
        case staff
    }
    
    typealias Input = ListType
}

// MARK: Route data passing
extension CharacterList{
    struct CharacterDetailDataPassing{
        let character: DtoHpCharacterDetail
    }
}

// MARK: VIP - USE CASES
extension CharacterList{
    // type `usecases` for magic
    struct FetchCharacters {
        
        struct Request{
            let listType: ListType
        }
        
        struct Response{
            let characters: [DtoHpCharacter]
        }
        
        struct ViewModel {
            struct CharacterVm{
                internal init(dtoCharacter: DtoHpCharacter) {
                    self.dtoCharacter = dtoCharacter
                }
                
                let dtoCharacter: DtoHpCharacter
                var name: String{ dtoCharacter.name }
                var house: String{ dtoCharacter.house.rawValue }
                var image: String{ dtoCharacter.image }
            }
            
            var characters: [CharacterVm]
        }
    }
    
    struct ShowCharacterDetail {
        
        struct Request {
            let characterVm: CharacterList.FetchCharacters.ViewModel.CharacterVm
        }
        
        struct Response{
            let detail: DtoHpCharacterDetail
        }
        
        struct ViewModel{
            let character: DtoHpCharacterDetail
        }
    }
    
    struct ShowError {
        
        struct Response {
            let error: Error
        }
        
        struct ViewModel {
            let description: String
        }
    }
}
