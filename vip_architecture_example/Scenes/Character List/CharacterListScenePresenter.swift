//
//  CharacterListScenePresenter.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 29/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import UIKit

protocol ICharacterListScenePresenter: AnyObject {
    func fetchCharactersResponse(_ response: CharacterList.FetchCharacters.Response)
    
    func fetchCharacterImageResponse(_ response: CharacterList.FetchCharacterImage.Response)
    
    func showCharacterDetailResponse(_ response: CharacterList.ShowCharacterDetail.Response)
    
    func showErrorResponse(_ response: CharacterList.ShowError.Response)
}

class CharacterListScenePresenter{
    
    weak var vc: ICharacterListSceneDelegate?
    
    init(vc: ICharacterListSceneDelegate){
        self.vc = vc
    }
}

extension CharacterListScenePresenter: ICharacterListScenePresenter{
    // MARK: PRESENTATION LOGIC INTERFACE IMPLEMENTATIONS
    
    func fetchCharactersResponse(_ response: CharacterList.FetchCharacters.Response){
        
        let vms = response.characters.map{
            CharacterList.FetchCharacters.ViewModel(
                dtoCharacter: $0,
                isLoading: true
            )
        }
        
        self.vc?.didReceiveFetchCharactersViewModel(vms)
        
    }
    
    func fetchCharacterImageResponse(_ response: CharacterList.FetchCharacterImage.Response){
        
        let vm = CharacterList.FetchCharacterImage.ViewModel(
            cellIndex: response.cellIndex,
            characterImg: response.characterImg
        )
        
        vc?.didReceiveFetchCharacterImageViewModel(vm)
        
    }
    
    func showCharacterDetailResponse(_ response: CharacterList.ShowCharacterDetail.Response){
        
        let vm = CharacterList.ShowCharacterDetail.ViewModel(
            character: response.detail,
            characterImg: response.studentImg
        )
        
        vc?.showCharacterDetail(vm)
        
    }
    
    func showErrorResponse(_ response: CharacterList.ShowError.Response){
        self.vc?.didReceiveError(.init(description: response.error.localizedDescription))
    }
}
