//
//  CharacterListSceneRouter.swift
//  vip_architecture_example
//
//  Created by Lorenzo Limoli on 29/06/22.
//  Copyright (c) 2022 Lorenzo Limoli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//  https://github.com/lore-lml

import UIKit
import SwiftRouting
import Swinject


// MARK: Navigation Methods
protocol ICharacterListSceneRouter: AnyObject{
    func showCharacterDetail(input: CharacterList.CharacterDetailDataPassing)
    func dismissIfModal()
}

class CharacterListSceneRouter: IRouter {
    
    enum AvailableRoutes {
        case characterDetail(input: CharacterDetail.Input)
    }
    
    typealias Routes = AvailableRoutes
    
    weak var vc: UIViewController!
    var navigator: IAppNavigator?
    var assembler: Assembler?
    
    init(vc: UIViewController) {
        self.vc = vc
    }
    
    func showRoute(route: AvailableRoutes) {
        
        switch route{
        case .characterDetail(let input):
            let controller = CharacterDetailSceneAdapter.setup(input: input, assembler: assembler)
            navigator?.go(to: controller)
        }
    }

}


extension CharacterListSceneRouter: ICharacterListSceneRouter{
    // MARK: NAVIGATION METHODS LOGIC INTERFACE IMPLEMENTATION
    func showCharacterDetail(input: CharacterList.CharacterDetailDataPassing){
        let input = CharacterDetail.Input(
            character: input.character,
            characterImg: input.characterImg
        )
        showRoute(route: .characterDetail(input: input))
    }
    
    func dismissIfModal() {
        navigator?.dismissModal(vc)
    }
}
